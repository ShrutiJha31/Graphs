class Solution {
public:
    void dfs(int node, unordered_map<int,vector<int>>&mp,unordered_map<int,int>&vis,vector<vector<int>>& st)
    {
        vis[node]=1;
        for(auto itr:mp[node])
        {
            if(vis[itr]==0)
                dfs(itr,mp,vis,st);
        }
    }
    int removeStones(vector<vector<int>>& st) {
        unordered_map<int,vector<int>>mp;
        unordered_map<int,int>vis;
        int cnt=0;
        for(int i=0;i<st.size();i++)
        {
            for(int j=i+1;j<st.size();j++)
            {
                if(st[j][0]==st[i][0]||st[j][1]==st[i][1])
                {
                    mp[i].push_back(j);
                    mp[j].push_back(i);
                }
            }
        }
        for(int i=0;i<st.size();i++)
        {
            if(vis[i]==0)
            {
                cnt++;
                dfs(i,mp,vis,st);
            }
        }
        return st.size()-cnt;
    }
};
